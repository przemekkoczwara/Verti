@use 'sass:map';

* {
  box-sizing: border-box;
}

$breakpoints: (
        sm: 576px,
        md: 768px,
        lg: 992px,
        xl: 1200px,
        hd: 1600px
);

@mixin make-col($size: null, $columns: 12) {
  @for $i from 1 through $columns {
    @if $size {
      .col-#{$size}-#{$i} {
        width: (100% / $columns) * $i;
      }
    } @else {
      .col-#{$i} {
        width: (100% / $columns) * $i;
      }
    }
  }
}

@mixin media-breakpoint-up($size) {
  @if map-has-key($breakpoints, $size) {
    @media (min-width: map-get($breakpoints, $size)) {
      @content;
    }
  }
}

.container {
  max-width: 100%;
  padding-left: 15px;
  padding-right: 15px;
  margin-left: auto;
  margin-right: auto;

  @include media-breakpoint-up(sm) {
    max-width: map-get($breakpoints, sm);
  }

  @include media-breakpoint-up(md) {
    max-width: map-get($breakpoints, md);
  }

  @include media-breakpoint-up(lg) {
    max-width: map-get($breakpoints, lg);
  }

  @include media-breakpoint-up(xl) {
    max-width: map-get($breakpoints, xl);
  }

  @include media-breakpoint-up(hd) {
    max-width: map-get($breakpoints, hd);
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

[class*="col-"] {
  padding-left: 15px;
  padding-right: 15px;
  min-height: 1px;
}

@include make-col();

@include media-breakpoint-up(sm) {
  @include make-col(sm);
}

@include media-breakpoint-up(md) {
  @include make-col(md);
}

@include media-breakpoint-up(lg) {
  @include make-col(lg);
}

@include media-breakpoint-up(xl) {
  @include make-col(xl);
}

@include media-breakpoint-up(hd) {
  @include make-col(hd);
}
